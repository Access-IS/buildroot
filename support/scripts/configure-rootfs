#!/usr/bin/env bash
echo "configuring  rootfs"

# remove entries from inittab 
sed -i '/si0/d' output/target/etc/inittab
sed -i '/si1/d' output/target/etc/inittab
sed -i '/shd1/d' output/target/etc/inittab
sed -i '/shd2/d' output/target/etc/inittab

rm -rf output/target/etc/dropbear
mkdir output/target/etc/dropbear
cp system/dropbear_ecdsa_host_key output/target/etc/dropbear/
cd output/target/usr/share/terminfo/x/
if [ ! -L xterm-256color ]; then
	ln -s xterm-color xterm-256color
fi
cd -

cat > output/target/root/gadget <<EOF
#!/bin/sh
modprobe libcomposite
mount -t configfs none /sys/kernel/config
mkdir /sys/kernel/config/usb_gadget/g1
cd /sys/kernel/config/usb_gadget/g1 
echo 0x1d6b > idVendor # Linux Foundation
echo 0x0104 > idProduct # Multifunction Composite Gadget
echo 0x0100 > bcdDevice # v1.0.0
echo 0x0200 > bcdUSB # USB2
mkdir -p strings/0x409
echo "fedcba9876543210" > strings/0x409/serialnumber
echo "Access IS" > strings/0x409/manufacturer 
echo "multifunction gadget" > strings/0x409/product 
mkdir -p functions/ecm.usb0
#mkdir -p functions/mass_storage.usb0
#echo /dev/mtdblock4 > functions/mass_storage.usb0/lun.0/file
mkdir -p configs/c.1/strings/0x409
echo "66:AC:4F:48:B3:96" > functions/ecm.usb0/host_addr
echo "Config 1: ECM network" > configs/c.1/strings/0x409/configuration 
echo 250 > configs/c.1/MaxPower 
ln -s functions/ecm.usb0 configs/c.1/
#ln -s functions/mass_storage.usb0 configs/c.1/
echo "ci_hdrc.0" > /sys/kernel/config/usb_gadget/g1/UDC
ifconfig lo up
ifconfig usb0 192.168.99.2 netmask 255.255.255.0 up
exit 0
EOF

chmod +x output/target/root/gadget

cat > output/target/etc/init.d/S01mount <<EOF
#
# Configure machine
#
case "\$1" in
	start)
		echo "Configuring machine..."
		if [ -b "/dev/mtdblock4" ];then 
			mkdir /.base; 
			mount -t jffs2 /dev/mtdblock4 /.base ;
			[ -d /.base/ovl ] || mkdir /.base/ovl ;
			[ -d /.base/persist ] || mkdir /.base/persist ;
		fi
		if [ -f /.base/ovl/mach.squash ]; then
			if [ -f /.base/ovl/MD5SUM ]; then
				if  md5sum -s -c /.base/ovl/MD5SUM  ; then
					echo -n "Creating machine overlay .. "
					mkdir /.lower /.upper /.tmp /petram;
					mount /.base/ovl/mach.squash /.lower;
					mount -t overlay -o lowerdir=/.lower,upperdir=/.upper,workdir=/.tmp  overlay /petram;
                    ln -s /.base/persist /petram/persist
                   
                    touch /.base/.load_ok
					echo "done";
				else
					echo "mach.squash checksum failed, not mounting overlay";
					/root/gadget;
				fi
			else
				echo "mach.squash present but MD5SUM file not found";
				/root/gadget;
			fi
		
		else
			echo "Unconfigured system, starting usb gadgets";
			/root/gadget;
		fi
		;;
	
	stop)
		;;
esac
exit \$?
EOF

chmod +x output/target/etc/init.d/S01mount

cat > output/target/etc/init.d/S99user <<EOF
#
# run scripts in /petram/init/ if mounted
#
case "\$1" in
	start)
        if [ -d /petram/init ]; then
            for i in /petram/init/S??* ; do
                \$i start
            done
        fi
        ;;
    *)
		;;
                    
esac
exit \$?
EOF

chmod +x output/target/etc/init.d/S99user

# create config for uboot-envtools
cat > output/target/etc/fw_env.config <<EOF
/dev/mtd1	0x00000	0x40000
EOF

# add brcm firmware to target
cp -a system/firmware output/target/lib/
